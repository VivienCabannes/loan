#!/usr/bin/env python
import argparse
import logging

import asyncio

from loan import (
    DB,
    TexHandler,
    compile_latex,
    parse_latex_date
)

logging.basicConfig(
    format="{asctime} {levelname} [{name}:{lineno}] {message}",
    style='{',
    datefmt='%H:%M:%S',
    level='INFO',
    handlers=[
        logging.StreamHandler(),
    ],
)

parser = argparse.ArgumentParser(description="Generate loan statement")
parser.add_argument("-s", "--start", nargs="?", help="start date for statement")
parser.add_argument("-e", "--stop", nargs="?", help="stop date for statement")
args = parser.parse_args()

print(args.stop, args.start)


async def load_history(user, start_date, stop_date):
    database = DB()
    await database.start()
    records = await database.load_wire(user, start_date, stop_date)
    balance = await database.get_date_balance(user, start_date)
    return records, balance

async def main(start_date, stop_date):
    start_date, stop_date = parse_latex_date(start_date, stop_date) 
    for user in ['user_1', 'user_2', 'joint']:
        handler = TexHandler(user, start_date, stop_date)
        records, balance = await load_history(user, start_date, stop_date)
        handler.generate_tex_file(records, balance)
        compile_latex(user, stop_date)
    
asyncio.run(main(args.start, args.stop))
